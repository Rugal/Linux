" ---------------------------------vundle configure
"  git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()
Plugin 'gmarik/vundle'
Plugin 'majutsushi/tagbar'
Plugin 'winmanager'
Plugin 'fholgado/minibufexpl.vim'
Plugin 'SuperTab'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'xuyuanp/nerdtree-git-plugin'
Plugin 'mru.vim'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'Townk/vim-autoclose'
Plugin 'Yggdroot/indentLine'
Plugin 'vimomni'
Plugin 'altercation/vim-colors-solarized'
Plugin 'Valloric/YouCompleteMe'
Plugin 'tpope/vim-fireplace'
Plugin 'tpope/vim-salve'
Plugin 'tpope/vim-dispatch'
Plugin 'vim-scripts/VimClojure'
Plugin 'bhurlow/vim-parinfer'
Plugin 'ShowTrailingWhitespace'
Plugin 'mhinz/vim-startify'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'scrooloose/syntastic'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'godlygeek/tabular'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'jreybert/vimagit'
Plugin 'mbbill/undotree'
Plugin 'ryanoasis/vim-devicons'
Plugin 'leafgarland/typescript-vim'
Plugin 'mtscout6/syntastic-local-eslint.vim'
Plugin 'dbext.vim'
Plugin 'edkolev/tmuxline.vim'
Plugin 'simeji/winresizer'
Plugin 'Chiel92/vim-autoformat'
Plugin 'skywind3000/vim-keysound'
call vundle#end()

" winmanager definitions
let g:winManagerWindowLayout="NERDTree|Tagbar"
map <silent> <F12> :WMToggle<cr>
let g:winManagerWidth=40
let g:AutoOpenWinManager=1

" The-NERD-Tree configure
let g:NERDTree_title="[NERDTree]"
function! NERDTree_Start()
    exec 'NERDTree'
endfunction
function! NERDTree_IsValid()
    return 1
endfunction

let g:Tagbar_title = "[Tagbar]"
function! Tagbar_Start()
    exec 'q'
    exe 'TagbarOpen'
endfunction
function! Tagbar_IsValid()
    return 1
endfunction
let g:tagbar_vertical = 30


" taglist.vim configure
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Right_Window=0
let Tlist_File_Fold_Auto_Close=1
let Tlist_Auto_Open = 0
let Tlist_Sort_Type='name'
let Tlist_Show_Menu=1
let Tlist_Max_Submenu_Items=10
let Tlist_Max_Tag_length=50
let Tlist_Use_SingleClick=0
let Tlist_Use_SingleClick=0
let Tlist_File_Fold_Auto_Close=1
let Tlist_GainFocus_On_ToggleOpen=0
let Tlist_Use_Horiz_Window=0
:command -range=% T :TlistToggle

" minibufexpl.vim configure
noremap <C-J>     <C-W>j
noremap <C-K>     <C-W>k
noremap <C-H>     <C-W>h
noremap <C-L>     <C-W>l

" SuperTab configure
let g:SuperTabRetainCompletionType=2
let g:SuperTabDefaultCompletionType="<C-x><C-o>"

" powerline configure
set laststatus=2
set noshowmode "hide default mode text
let g:Powerline_symbols = 'fancy'
set encoding=utf-8
"set fillchars+=stl:\ ,stlnc:\
set term=xterm-256color
set termencoding=utf-8

" mru.vim configure
"let MRU_File='~/.mru_files'
let MRU_Max_Extries=200
let MRU_Exclude_Files='^/tmp/.*\|^/var/tmp/.*'
let MRU_auto_Close=1
let MRU_Use_Current_Window=0
nmap mru  :MRU<CR>

" VimClojure configuration
let g:vimclojure#ParenRainbow=10

" Syntastic
let g:syntastic_javascript_checkers=['eslint']
let g:syntastic_javascript_eslint_exe="$(npm bin)/eslint"
let g:syntastic_typescript_checkers = ['tslint']
let g:syntastic_typescript_tslint_exe="$(npm bin)/tslint"
let g:syntastic_typescript_tslint_args = "--config ./tslint.json --project tsconfig.json"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 0
let g:syntastic_loc_list_height = 5
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = '‚ùå'
let g:syntastic_style_error_symbol = '‚ÅâÔ∏è'
let g:syntastic_warning_symbol = '‚ö†Ô∏è'
let g:syntastic_style_warning_symbol = 'üí©'
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]
highlight link SyntasticErrorSign SignColumn
highlight link SyntasticWarningSign SignColumn
highlight link SyntasticStyleErrorSign SignColumn
highlight link SyntasticStyleWarningSign SignColumn

" Keysound
" brew install sdl2 && pip3 install pysdl2
" Mixer https://www.libsdl.org/projects/SDL_mixer/
let g:keysound_enable = 1
let g:keysound_theme = 'default'
let g:keysound_py_version = 3
let g:keysound_volume = 500
